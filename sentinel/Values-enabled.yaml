image:
  registry: docker.io
  repository: bitnami/redis
  pullSecrets: ""
sentinel:
  enabled: true
  usePassword: false
  masterSet: mymaster
  initialCheckTimeout: 5
  quorum: 2
  downAfterMilliseconds: 60000
  failoverTimeout: 18000
  parallelSyncs: 1
  port: 26379
  ## Additional Redis configuration for the sentinel nodes
  ## ref: https://redis.io/topics/config
  ##
  configmap:
  ## Enable or disable static sentinel IDs for each replicas
  ## If disabled each sentinel will generate a random id at startup
  ## If enabled, each replicas will have a constant ID on each start-up
  ##
  staticID: false
  ## Configure extra options for Redis Sentinel liveness and readiness probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes)
  ##
  livenessProbe:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 5
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  readinessProbe:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 5
    timeoutSeconds: 1
    successThreshold: 1
    failureThreshold: 5
  service:
    ##  Redis Sentinel Service type
#    redisNodePort: 31000
#    redisPort: 6379
    sentinelNodePort: 31002
    sentinelPort: 26379
    type: NodePort
  image:
    repository: bitnami/redis-sentinel
serviceAccount:
  create: false
rbac:
  create: false
networkPolicy:
  enabled: false
cluster:
  enabled: true
  slaveCount: 2
clusterDomain: cluster.local
securityContext:
  enabled: true
  fsGroup: 1001
  runAsUser: 1001
usePassword: false
password: ""
usePasswordFile: false
redisPort: 6379
master:
  command: "/run.sh"
  configmap:
  disableCommands:
    - FLUSHALL
  livenessProbe:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 5
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  readinessProbe:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 5
    timeoutSeconds: 1
    successThreshold: 1
    failureThreshold: 5
  persistence:
    enabled: true
    storageClass: openebs-hostpath
    size: 1Gi
  service:
#    port: 6379
#    type: ClusterIP
    type: NodePort
    port: 6379
    nodePort: 31004
  statefulset:
    updateStrategy: RollingUpdate
slave:
  service:
    type: NodePort
    port: 6379
    nodePort: 31003
  port: 6379
  command: "/run.sh"
  disableCommands:
    - FLUSHALL
  livenessProbe:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  readinessProbe:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 10
    successThreshold: 1
    failureThreshold: 5
  persistence:
    enabled: true
    storageClass: openebs-hostpath
    size: 1Gi
  statefulset:
    updateStrategy: RollingUpdate
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
              - key: app
                operator: In
                values:
                  - redis
          topologyKey: "kubernetes.io/hostname"
metrics:
  enabled: false
volumePermissions:
  enabled: false
configmap: |-
  appendonly yes
  auto-aof-rewrite-percentage 100
  auto-aof-rewrite-min-size 64mb
  maxmemory 21474836480
  # Disable RDB persistence, AOF persistence already enabled.
  save ""
sysctlImage:
  enabled: false
#  mountHostSys: true
#  command:
#    - /bin/sh
#    - -c
#    - |-
#      install_packages procps
#      sysctl -w net.core.somaxconn=10000
#      echo never > /host-sys/kernel/mm/transparent_hugepage/enabled





